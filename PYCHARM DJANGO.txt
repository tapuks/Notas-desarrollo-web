pip install django -> INSTALAS DJANGO

django-admin startproject sistema_administracion_personas -> nuevo proyecto python

python .\manage.py startapp webapp  -> nueva app

python manage.py startapp (nombre del starapp)

registrar la nueva app creada en settings.py ->  
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.staticfiles',
	...............,
    'web_app',
]

python manage.py showmigrations -> ves migraciones pendientes

python manage.py makemigrations -> crea el archivo con la migracion pendiente que vamos a ejecutar

python manage.py migrate -> haces las migraciones

python manage.py sqlmigrate persona 0001 -> ves codigo sql creado al crear una tabla

python manage.py createsuperuser -> creas super usuario para el panel de administracion

python manage.py runserver LANZAS SERVIDOR

{% csrf_token %} se usa para que otra web no rellene los campos de tu formulario y se tenga que enviar desde tu web.


PARA AÑADIR UNA TABLA AL PANEL DE ADMINISTRADOR:
en admin.py registrar tu modelo:
admin.site.register(Pedidos)

PARA FILTRAR LOS ELEMENTTOS DE UNA TABLA POR ID POR EJEMPLO
Pedidos.objects.get(id=6)

PARA FILTRAR LOS ELEMENTOS QUE QUIERES DE UNA TABLA:
Pedidos.objects.filter(nombre='pedido1', seccion='comida')
PARA METER UN ELEMENTO EN UNA TABLA DEL MODELO:
pedido=Pedidos.objects.create(nombre='pedido2, seccion="deporte", precio="5"
pedido.save()

models: 1 persona puede tener varios moviles, y ecada movil solo pertenece a una persona

class Persona
class Movil -> foreign Key(persona)


JUGADOR = Jugador.objects.get(equipo_id=id_equipo) ->GET DEVUELVE UN SOLO RESULTADOS
plantilla = Plantilla.objects.filter(equipo_id=id_equipo) ->FILTER DEVUELVE TODOS LOS RESULTADOS

Los decoradores son funciones que decoran otras funciones (añaden funcionalidades a otras funciones)

miLista = ["Maria", "Pepe", "Marta", "Antonio"]
miLista.append("David")
miLista.append(2)
miLista.extend(["jazmin", "raquel"])
miLista.remove("Marta")
miLista.insert(3, "magi")
print(miLista[:])
miLista2=[4 , 5]
miLista3= miLista+ miLista2
print(miLista3)

miDiccionario = {1:'curtua', 'pais':'Belgica', 'posicion': 'potero', 'zamoras': {'temporadas':[2010,2012,2014,2022]}}
print(miDiccionario.keys())
print(miDiccionario.values())
print(len(miDiccionario))
print(miDiccionario)

salario = int(input('introdice tu salario'))
print("tu salario es " + str(salario))
if salario >1000 and salario<1200 or salario==1100:
    print("el salario es bajo")

for i in 'david_berdiell@hotmail.com' :
    print(i)
for i in range(5):
    print(f"valor de la variable {i}")
for i in range(5,12,2):
    print(f"valor2 de la variable {i}")

email= 'david_berdiell@hotmail.com'
for i in range(len(email)) :
    if email[i] == '@':
        print("email correcto")
    else:
        print("email falso")

for i in email:
    if i =='l':
        continue
    print('letra '+ i)

def devuelve_ciudades(*ciudades):
    for ciudad in ciudades:
        yield ciudad

ciudades = (devuelve_ciudades("madrid", "roma", "bogota"))
for i in ciudades:
    print(i)
# -----------------------------
def devuelve_peces(*peces):
    for pez in peces:
        yield from pez

peces = (devuelve_peces("salmon", "trucha", "bacalao"))


print(next(peces))
print(next(peces))




